[{"/Users/wjg/Desktop/Twilio/frontend/src/components/Login.js":"1","/Users/wjg/Desktop/Twilio/frontend/src/App.js":"2","/Users/wjg/Desktop/Twilio/frontend/src/reportWebVitals.js":"3","/Users/wjg/Desktop/Twilio/frontend/src/utils/Socketio.js":"4","/Users/wjg/Desktop/Twilio/frontend/src/index.js":"5","/Users/wjg/Desktop/Twilio/frontend/src/utils/axios.js":"6","/Users/wjg/Desktop/Twilio/frontend/src/components/CallCenter.js":"7","/Users/wjg/Desktop/Twilio/frontend/src/components/CallProgress.js":"8","/Users/wjg/Desktop/Twilio/frontend/src/components/NavBar.js":"9","/Users/wjg/Desktop/Twilio/frontend/src/hooks/useTokenFromLocalStorage.js":"10","/Users/wjg/Desktop/Twilio/frontend/src/hooks/useLocalStorage.js":"11","/Users/wjg/Desktop/Twilio/frontend/src/serviceWorker.js":"12","/Users/wjg/Desktop/Twilio/frontend/src/utils/Axios.js":"13"},{"size":2003,"mtime":1610172314375,"results":"14","hashOfConfig":"15"},{"size":2861,"mtime":1610316679120,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609820273723,"results":"17","hashOfConfig":"15"},{"size":422,"mtime":1610300257066,"results":"18","hashOfConfig":"15"},{"size":523,"mtime":1610302412402,"results":"19","hashOfConfig":"15"},{"size":121,"mtime":1610172826944,"results":"20","hashOfConfig":"15"},{"size":301,"mtime":1610172142510,"results":"21","hashOfConfig":"15"},{"size":1179,"mtime":1610302412430,"results":"22","hashOfConfig":"15"},{"size":635,"mtime":1610291066808,"results":"23","hashOfConfig":"15"},{"size":783,"mtime":1610302412424,"results":"24","hashOfConfig":"15"},{"size":652,"mtime":1610289469302,"results":"25","hashOfConfig":"15"},{"size":5098,"mtime":1610172807818,"results":"26","hashOfConfig":"15"},{"size":122,"mtime":1610307550506,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1o8sii9",{"filePath":"31","messages":"32","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wjg/Desktop/Twilio/frontend/src/components/Login.js",[],["57","58"],"/Users/wjg/Desktop/Twilio/frontend/src/App.js",["59"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport Login from \"./components/Login\";\nimport { useImmer } from \"use-immer\";\nimport axios from \"./utils/Axios\";\nimport socket from \"./utils/Socketio\";\nimport CallCenter from \"./components/CallCenter\";\nimport useTokenFromLocalStorage from \"./hooks/useTokenFromLocalStorage\";\nimport * as Twilio from \"twilio-client\";\n\nfunction App() {\n  const [calls, setCalls] = useImmer({\n    calls: [],\n  });\n\n  const [user, setUser] = useImmer({\n    username: \"\",\n    mobileNumber: \"\",\n    verificationCode: \"\",\n    verificationSent: false,\n  });\n  const [twilioToken, setTwilioToken] = useState();\n  const [storedToken, setStoredToken, isValidToken] = useTokenFromLocalStorage(\n    null\n  );\n\n  useEffect(() => {\n    console.log(\"Twilio token changed\");\n    if (twilioToken) {\n      connectTwilioVoiceClient(twilioToken);\n    }\n  }, [twilioToken]);\n\n  useEffect(() => {\n    if (isValidToken) {\n      console.log(\"Valid token\");\n      return socket.addToken(storedToken);\n    }\n    console.log(\"invalid token\");\n    socket.removeToken();\n  }, [isValidToken, storedToken]);\n\n  useEffect(() => {\n    socket.client.on(\"connect\", () => {\n      console.log(\"Connected\");\n    });\n    socket.client.on(\"disconnect\", () => {\n      console.log(\"Socket disconnected\");\n    });\n    socket.client.on(\"twilio-token\", (data) => {\n      console.log(\"Receive Token from the backend\");\n      setTwilioToken(data.token);\n    });\n\n  async function sendSmsCode() {\n    console.log(\"Sending SMS\");\n    await axios.post(\"/login\", {\n      to: user.mobileNumber,\n      username: user.username,\n      channel: \"sms\",\n    });\n    setUser((draft) => {\n      draft.verificationSent = true;\n    });\n  }\n\n  function connectTwilioVoiceClient(twilioToken) {\n    const device = new Twilio.Device(twilioToken, { debug: true });\n    device.on(\"error\", (error) => {\n      console.error(error);\n    });\n    device.on(\"incoming\", (connection) => {\n      console.log(\"Incoming from twilio\");\n      connection.accept();\n    });\n  }\n  //below is where we verify our user with the JWT token\n  //modified in chapter 24\n  async function sendVerificationCode() {\n    console.log(\"Sending verification\");\n    const response = await axios.post(\"/verify\", {\n      to: user.mobileNumber,\n      code: user.verificationCode,\n      username: user.username,\n    });\n    console.log(\"received token\", response.data.token);\n    setStoredToken(response.data.token);\n  }\n\n  return (\n    <div>\n      {isValidToken ? (\n        <CallCenter calls={calls} /> //chapter 25\n      ) : (\n        <>\n          <CallCenter calls={calls} />\n          <Login\n            user={user}\n            setUser={setUser}\n            sendSmsCode={sendSmsCode}\n            sendVerificationCode={sendVerificationCode}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/wjg/Desktop/Twilio/frontend/src/reportWebVitals.js",[],"/Users/wjg/Desktop/Twilio/frontend/src/utils/Socketio.js",[],"/Users/wjg/Desktop/Twilio/frontend/src/index.js",[],["60","61"],"/Users/wjg/Desktop/Twilio/frontend/src/utils/axios.js",[],"/Users/wjg/Desktop/Twilio/frontend/src/components/CallCenter.js",[],"/Users/wjg/Desktop/Twilio/frontend/src/components/CallProgress.js",["62"],"/Users/wjg/Desktop/Twilio/frontend/src/components/NavBar.js",["63","64"],"/Users/wjg/Desktop/Twilio/frontend/src/hooks/useTokenFromLocalStorage.js",["65"],"/Users/wjg/Desktop/Twilio/frontend/src/hooks/useLocalStorage.js",[],"/Users/wjg/Desktop/Twilio/frontend/src/serviceWorker.js",[],"/Users/wjg/Desktop/Twilio/frontend/src/utils/Axios.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":null,"fatal":true,"severity":2,"message":"70","line":108,"column":1},{"ruleId":"66","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":12,"column":14,"nodeType":"75","endLine":14,"endColumn":9},{"ruleId":"73","severity":1,"message":"74","line":7,"column":12,"nodeType":"75","endLine":9,"endColumn":7},{"ruleId":"73","severity":1,"message":"74","line":20,"column":37,"nodeType":"75","endLine":21,"endColumn":7},{"ruleId":"76","severity":1,"message":"77","line":12,"column":6,"nodeType":"78","endLine":12,"endColumn":13,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"Parsing error: Unexpected token, expected \",\"\n\n  106 | }\n  107 | \n> 108 | export default App;\n      | ^\n  109 |",["80"],["81"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkToken'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [checkToken, value]",{"range":"85","text":"86"},[415,422],"[checkToken, value]"]